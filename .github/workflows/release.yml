# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Release

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  changes:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      package-changed: ${{ steps.changed-files-package.outputs.any_changed }}
      website-changed: ${{ steps.changed-files-website.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v3
      - id: changed-files-package
        uses: tj-actions/changed-files@v35
        with:
          files: packages/**
      - id: changed-files-website
        uses: tj-actions/changed-files@v35
        with:
          files: website/**
      - if: steps.changed-files-package.outputs.any_changed == 'true'
        run: echo "${{ steps.changed-files-website.outputs.all_changed_files }}"
      - if: steps.changed-files-package.outputs.any_changed == 'false'
        run: echo "No files changed in the packages dir"
      - if: steps.changed-files-website.outputs.any_changed == 'true'
        run: echo "${{ steps.changed-files-website.outputs.all_changed_files }}"
      - if: steps.changed-files-website.outputs.any_changed == 'false'
        run: echo "No files changed in the website dir"

  test:
    needs: changes
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.package-changed === 'true' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn workspace react-day-picker run typecheck
      - run: yarn workspace react-day-picker run lint
      - run: yarn workspace react-day-picker run test

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn workspace react-day-picker run build
      - uses: actions/upload-artifact@v3
        with:
          name: rdp-dist
          path: packages/react-day-picker/dist

  publish:
    needs: [build, test]
    if: needs.build.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
          always-auth: false
      - uses: actions/download-artifact@v3
        with:
          name: rdp-dist
      - run: echo "//<npm-registry>:8080/:_authToken=$NODE_AUTH_TOKEN" > ~/.npmrc
      - run: npm publish --dry-run
        working-directory: packages/react-day-picker
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  test-website:
    needs: [changes, publish]
    if: ${{ needs.changes.outputs.website-changed === 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
          install: true
      - run: yarn install
      - run: yarn add react-day-picker --latest
        working-directory: website
      - run: yarn workspace website run typecheck
      - run: yarn workspace website run lint
      - run: yarn workspace website run test

  build-website:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
      - run: yarn install
      - run: yarn add react-day-picker --latest
        working-directory: website
      - run: yarn workspace website run build
      - uses: actions/upload-artifact@v3
        with:
          name: rdp-dist
          path: packages/react-day-picker/dist

  deploy-website:
    needs: [build-website, test-website]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
      - uses: actions/download-artifact@v3
        with:
          name: website-build
      - run: yarn deploy
        working-directory: website
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
